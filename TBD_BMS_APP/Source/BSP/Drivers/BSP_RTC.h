/****************************************************************************/
/* 	File    	BSP_RTC.h 			 
 * 	Author		Hollis
 *	Notes
 * 
 *	Version		Date    		Change Logs:
 *  V1.0.0 		2021-06-08		first version         	
 * 
 * Copyright (c) 2021, Immotor
*****************************************************************************/
#ifndef __BSP_RTC_H__
#define __BSP_RTC_H__

#include <stdint.h>
#include "main.h"
#include "RTC.h"

extern t_PCF85063_DATE DefaultInfo;

typedef struct
{
	RTC_TimeTypeDef pTime;
	RTC_DateTypeDef pData;
}RTC_InfoTypeDef;

/*****************************************************
	* 函数功能: RTC 初始化
	* 输入参数: RTC_HandleTypeDef rtc类型
	* 返 回 值: 无
	* 说    明：适配外部代码
******************************************************/
void BSPRTCInit(void);

/*****************************************************
	* 函数功能: 获取当前芯片时间
	* 输入参数: RTC_InfoTypeDef *NewInfo
	* 返 回 值: 返回0：获取成功  1：时间获取错误 2：日期获取错误
	* 说    明：无
******************************************************/
uint8_t RTC_GetInfo(t_PCF85063_DATE *NewInfo);

/*****************************************************
	* 函数功能: 设置当前芯片时间
	* 输入参数: RTC_InfoTypeDef *NewInfo
	* 返 回 值: 返回0：设置成功  1：时间设置错误 2：日期设置错误
	* 说    明：星期几不使用，但不可以不配置值
******************************************************/
uint8_t RTC_SetInfo(t_PCF85063_DATE *SetInfo);

//=============================================================================================
//函数名称	: void BSPRTCSetAlarmAfterSeconds(u32 sec)
//输入参数	: sec:秒	
//输出参数	: void
//静态变量	: 
//功    能	: 设置RTC在sec秒后产生RTC中断
//注    意	: 可以设置两个闹钟A/B,此处定时最长为65536秒 BCD码做加法计算需转换
//=============================================================================================
void BSPRTCSetAlarmAfterSeconds(uint16_t sec);

//=============================================================================================
//函数名称	: void BSPRTCStop(void)
//输入参数	: void
//输出参数	: void
//静态变量	:
//功    能	: RTC停止函数 
//注    意	:
//=============================================================================================
void BSPRTCStop(void);

//=============================================================================================
//函数名称	: void BSPRTCClrTimeUp(void)
//输入参数	: void
//输出参数	: void
//静态变量	:
//功    能	: 清除RTC计时标志
//注    意	:
//=============================================================================================
void BSPRTCClrTimeUp(void);

//=============================================================================================
//函数名称	: void BSPRTCGetTimeUp(void)
//输入参数	: void
//输出参数	: 1：计时已满；0：计时未满
//静态变量	:
//功    能	: 获取RTC计时标志
//注    意	:
//=============================================================================================
uint8_t BSPRTCGetTimeUp(void);

//测试
void RTC_ReadTest(void);

#endif /* __BSP_RTC_H__ */


